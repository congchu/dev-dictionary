{"version":3,"sources":["apis/WordApi.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","timeout","headers","fetchIncludedWords","word","get","params","View","filterByFormula","then","response","console","log","data","records","App","useState","keyword","setKeyword","alertText","setAlertText","matchedWord","setMatchedWord","fetched","setFetched","onClick","e","a","preventDefault","inputElement","document","getElementById","inputKeyword","value","length","fields","responseWords","className","onSubmit","id","name","category","description","code_example","synonym","ReactDOM","render","StrictMode"],"mappings":"uPAEMA,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,2DACTC,QAAS,IACTC,QAAS,CAAE,cAAiB,8BAgBnBC,EAAqB,SAACC,GAC/B,OAAOP,EAASQ,IAAT,GAAiB,CAAEC,OAAQ,CAAEC,KAAM,UAAWC,gBAAgB,SAAD,OAAWJ,EAAX,qBAC/DK,MAAK,SAAUC,GAEZ,OADAC,QAAQC,IAAIF,EAASG,MACdH,EAASG,KAAKC,Y,OCuDlBC,MA5Ef,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,qBAAtC,mBAAOK,EAAP,KAAoBC,EAApB,KAKA,EAA4CN,mBAAS,IAArD,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDACdD,EAAEE,iBAEIC,EAAoBC,SAASC,eAAe,oBAC5CC,EAAeH,EAAaI,QAGdD,EAAaE,OAAS,GAP5B,wBAQZV,GAAW,GACXN,EAAWc,GATC,SDLe5B,ECea4B,EDdnCnC,EAASQ,IAAT,GAAiB,CAAEC,OAAQ,CAAEC,KAAM,UAAWC,gBAAgB,OAAD,OAASJ,EAAT,mBAAwBA,EAAxB,iBAC/DK,MAAK,SAAUC,GACZ,OAAIA,EAASG,KAAKC,SAAWJ,EAASG,KAAKC,QAAQoB,OAAS,EACjDxB,EAASG,KAAKC,QAAQ,GAGtB,MCFL,cAUNJ,EAVM,OAWZY,EAAeZ,EAASyB,QAXZ,UAagBhC,EAAmBc,GAbnC,QAaNmB,EAbM,OAcZzB,QAAQC,IAAIwB,EAAcD,QAC1BX,GAAW,GAfC,wBAkBZJ,EAAa,qFAlBD,kCDLc,IAAChB,ICKf,OAAH,sDAsBb,OACE,uBAAMiC,UAAU,QAAhB,UACE,yBAAQA,UAAU,OAAlB,UACE,oBAAIA,UAAU,wCAAd,oDACA,uBAAMC,SAAUb,EAAhB,UACE,uBAAOY,UAAU,+BAA+BE,GAAG,kBACnD,wBAAQF,UAAU,sCAAlB,mCAIF,qBAAKA,UAAU,uBAAf,SAAuClB,OAExCI,EAAU,kCACRF,EAAc,0BAASgB,UAAU,gCAAnB,UACb,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmChB,EAAYmB,OAC/C,wBAAQH,UAAU,iDAAlB,SAAoEhB,EAAYoB,cAClF,8BAAMpB,EAAYqB,cAGjBrB,EAAYsB,cAAgB,qBAAKN,UAAU,yBAAf,SAC3B,sBAAMA,UAAU,UAAhB,SAA2BhB,EAAYsB,iBAIxCtB,EAAYuB,SACX,mCAAGvB,EAAYmB,OAASvB,EACtB,uDAAWI,EAAYuB,WACrB,uDAAWvB,EAAYmB,aAQlB,8FAEF,sHCrEnBK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,W","file":"static/js/main.0576c443.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://api.airtable.com/v0/appwmFCbYijvawIYO/Dictionary',\n    timeout: 5000,\n    headers: { 'Authorization': 'Bearer keywlgmSjQ2ToUwTz' }\n});\n\n\nexport const fetchMatchedWord = (word: string) => {\n    return instance.get(``, { params: { View: \"Default\", filterByFormula: `OR(\"${word}\"=name,\"${word}\"=synonym)` } })\n        .then(function (response) {\n            if (response.data.records && response.data.records.length > 0) {\n                return response.data.records[0];\n            }\n            else {\n                return \"\";\n            }\n        });\n}\n\nexport const fetchIncludedWords = (word: string) => {\n    return instance.get(``, { params: { View: \"Default\", filterByFormula: `FIND(\"${word}\",synonym) > 0` } })\n        .then(function (response) {\n            console.log(response.data);\n            return response.data.records\n        });\n}\n","import React, { useState } from 'react';\nimport { fetchIncludedWords, fetchMatchedWord } from './apis/WordApi';\n\n\nfunction App() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [alertText, setAlertText] = useState(\"\");\n  const [matchedWord, setMatchedWord] = useState<{\n    name: string, description: string, category: string,\n    synonym: string,\n    code_example: string\n  }>();\n  const [containedWords, setContainedWords] = useState([]);\n  const [fetched, setFetched] = useState(false);\n  const onClick = async (e: any) => {\n    e.preventDefault();\n    // \n    const inputElement: any = document.getElementById(\"keyword-input\");\n    const inputKeyword = inputElement.value;\n\n\n    if (inputKeyword && inputKeyword.length > 0) {\n      setFetched(false);\n      setKeyword(inputKeyword);\n      const response = await fetchMatchedWord(inputKeyword);\n      setMatchedWord(response.fields);\n\n      const responseWords = await fetchIncludedWords(keyword);\n      console.log(responseWords.fields)\n      setFetched(true);\n\n    } else {\n      setAlertText(\"검색할 키워드를 입력해주세요.\")\n    }\n  }\n\n  return (\n    <main className=\"mt-24\">\n      <header className=\"pb-8\">\n        <h3 className=\"text-4xl font-bold text-gray-800 pb-6\">개발 용어 사전</h3>\n        <form onSubmit={onClick}>\n          <input className=\"border p-2 w-60 text-xl h-10\" id=\"keyword-input\" />\n          <button className=\"bg-yellow-200 p-2 ml-2  h-10 border\">\n            물음표\n          </button>\n        </form>\n        <div className=\"text-red-400 text-sm\">{alertText}</div>\n      </header>\n      {fetched ? <section>\n        {matchedWord ? <article className=\"whitespace-pre-line text-base\">\n          <div className=\"flex\">\n            <h6 className=\"text-lg font-bold\">{matchedWord.name}</h6>\n            <button className=\"bg-yellow-200 ml-2 px-2 text-sm rounded shadow\">{matchedWord.category}</button></div>\n          <div>{matchedWord.description}</div>\n\n          {/* 예제 코드 */}\n          {matchedWord.code_example && <div className=\"bg-gray-100 border p-1\">\n            <code className=\"text-xs\">{matchedWord.code_example}</code>\n          </div>}\n\n          {/* 동의어 */}\n          {matchedWord.synonym &&\n            <>{matchedWord.name !== keyword ?\n              <div>동의어: {matchedWord.synonym}</div>\n              : <div>동의어: {matchedWord.name}</div>}</>\n          }\n\n          {/* 카테고리 */}\n          {/* 연관 키워드 */}\n          {/* source_example */}\n\n\n        </article> : <>단어가 없습니다 (ㅠ)</>}\n\n      </section> : <>궁금한 단어를 입력해주세요</>}\n\n    </main >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}